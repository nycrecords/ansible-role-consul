---
# 0. Install consul on Ansible hostname
- name: Install consul on Ansible Host (e.g. localhost)
  include_tasks: ansible_host_install.yml
  tags:
    - install
    - configure
  when:
    - not ansible_server_certs | bool

# 1. Setup Gossip Encryption
- name: Create Gossip Encryption Key
  shell:
    cmd: "{{ consul_temp_build_dir.path }}/consul keygen"
  register: consul_gossip_encryption_key
  vars:
    ansible_become: false
  delegate_to: 127.0.0.1
  when:
    - not consul_encrypt_key
  run_once: true
  tags:
    - configure

- name: Set Consul Encryption Key
  set_fact:
    consul_encrypt_key: "{{ consul_gossip_encryption_key.stdout }}"
  when:
    - not consul_encrypt_key
  run_once: true
  tags:
    - configure

# Create TLS directories
- name: Create directories for consul TLS
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ consul_cert_base_path }}/ca"
    - "{{ consul_cert_base_path }}/{{ inventory_hostname_short }}"
  vars:
    ansible_become: false
  delegate_to: 127.0.0.1
  tags:
    - configure

# 2. Setup ca / Use Existing ca
- name: Generate consul ca
  shell:
    cmd: "{{ consul_temp_build_dir.path }}/consul tls ca create"
    chdir: "{{ consul_cert_base_path }}/ca"
  register: consul_tls_ca_output
  ignore_errors: True
  vars:
    ansible_become: false
  delegate_to: 127.0.0.1
  run_once: true
  tags:
    - configure

- name: Generate consul Agent Certs
  shell:
    cmd: "{{ consul_temp_build_dir.path }}/consul tls cert create -server -dc {{ consul_dc_name }} -ca ../ca/{{ consul_ca_cert }} -key ../ca/{{ consul_ca_key }}"
    chdir: "{{ consul_cert_base_path }}/{{ inventory_hostname_short }}"
  vars:
    ansible_become: false
  delegate_to: 127.0.0.1
  tags:
    - configure

- name: Copy consul Agent Certs for Server
  copy:
    src: "{{ item }}"
    dest: "{{ consul_configd_path }}"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0400
  with_items:
  - "{{ consul_cert_base_path }}/ca/"
  - "{{ consul_cert_base_path }}/{{ inventory_hostname_short }}/"
  tags:
    - configure

# 3. Create consul client configuration
- name: Create consul client configuration
  template:
    src: "consul.hcl.j2"
    dest: "{{ consul_configd_path }}/consul.hcl"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
  notify:
    - restart consul
  tags:
    - configure

# 4. Create consul server configuration
- name: Create consul server configuration
  template:
    src: "server.hcl.j2"
    dest: "{{ consul_configd_path }}/server.hcl"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
  notify:
    - restart consul
  tags:
    - configure

# 5. Configure consul systemd process
- name: Install consul service systemd
  template:
    src: consul.service.j2
    dest: /etc/systemd/system/consul.service
  tags:
    - configure

- name: Start consul service
  systemd:
    name: consul
    state: started
    enabled: yes
    daemon_reload: yes
  tags:
    - configure

- name: Make sure Consul is running before proceeding.
  wait_for:
    host: "{{ consul_client_address }}"
    port: 8500
    delay: 3
    timeout: 300

- name: Configure Consul bootstrap server
  include_tasks: configure_bootstrap.yml
  when: consul_bootstrap | bool
  tags:
    - configure

- name: Add Consul node token
  shell: |
    {{ consul_bin_path }}/consul acl set-agent-token \
    -token={{ consul_acl_token }} \
    agent {{ consul_node_token }}
  tags:
    - configure
